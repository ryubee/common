# tmux内のvimで256色を設定する方法
#
#まず
#tmux kill-server でtmuxのセッション?をすべて削除
#このファイルを~/.tmux.conf として設置
#シェルがzshでない場合は
#設定内部で使用するシェルは一番下に記載する
#作成したシェルを~/bin に作成してパスを通す
#最後に tmux -f ~/.tmux.conf で設定ファイルを読み込ませて起動すると設定が反映される
#
#スクリーンにxtermを使用するのは非推奨の用だがvimで動きがおかしくなるのと、
#今のところ問題ないのでxtermを指定する
#
#参考
#設定の内容は↓のコピペ
#http://n.blueblack.net/articles/2012-07-20_04_comfortable_cui_environment_tmux/
#
#ペインが複数になった時にはteratermなどでコピペが効かなくなるけど
#windows:Ctrl
#mac:option
#を押しながらだとできるようになる
#
#
#
## set the default TERM
#set -g default-terminal screen
### update the TERM variable of terminal emulator when creating a new session or attaching a existing session
#set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
### determine if we should enable 256-colour support
#if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'
#+----------------------------------------------------------------------------------------+
#  セッションオプション
#+----------------------------------------------------------------------------------------+

set-environment -g NCURSES_NO_UTF8_ACS 0

#setw -g utf8 on
#新しいウィンドウのベース番号
set-option -g base-index 1
#全てのベルを無視
set-option -g bell-action none
#各セッションで保持するバッファ数
set-option -g buffer-limit 20
#256色端末を使用
#set-option -g default-terminal "xterm"
#ウィンドウ履歴で保持される最大行数
set-option -g history-limit 10000
#Escapeキー入力時の待ち時間(0.5秒)をキャンセル
set-option -s escape-time 0
#起動シェルを指定
set-option -g default-shell /bin/bash
#"screen-256color" にするとvimの<Home><End>が変わるのでxtermに変更
set-option -g default-terminal xterm 
#set -g terminal-overrides 'xterm:colors=256'

#UTF-8 シーケンスが現れることに備える
set-window-option -g utf8 on
#
#+----------------------------------------------------------------------------------------+
#  ステータスライン
#+----------------------------------------------------------------------------------------+
#status-left 及び status-right の非ASCII文字をUTF-8として扱う
set-option -g status-utf8 on
set-option -g status on
set-option -g status-interval 2
set-option -g status-position top
set-option -g status-justify left
set-option -g status-left-length 80
set-option -g status-right-length 50
#set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"


#⮁⮀⮂⮃

#set-option -g status-left '#[fg=black,bg=green][S:#S]#[default]'
#set-option -g status-right '#[fg=black,bg=green][CPU=#(getCpuUsage.sh) MEM=#(getMemUsage.sh)]#[fg=black,bg=green][%Y/%m/%d(%a)%H:%M]#[default]'

# 文字色と背景色
set -g status-fg colour51
set -g status-bg colour239
set -g status-right-length 50
set -g status-left-length 60

#⮁⮀⮂⮃
#set-option -g status-right '#[fg=colour236,bg=default,bold]⮂#[fg=colour15,bg=colour236,bold] %m月%d日(%a) #[fg=colour168,bg=colour236]⮃#[fg=colour15,bg=colour236] %H:%M #[fg=colour168,bg=colour236]⮂#[fg=colour232,bg=colour168] S:#S I:#I P:#P D:#D '

#set -g status-right "#[fg=colour236]⮂#[fg=colour15,bg=colour236,bold] %m月%d日(%a) #[fg=colour168,bg=colour236]⮃#[fg=colour15,bg=colour236] %H:%M #[fg=colour168,bg=colour236]⮂#[fg=colour232,bg=colour168] S:#S I:#I P:#P D:#D #[default]"
set -g status-right '#[fg=colour236]⮂#[fg=colour15,bg=colour236,bold] %m月%d日(%a) #[fg=colour168,bg=colour236]⮃#[fg=colour15,bg=colour236] %H:%M #[default,bg=colour236,fg=colour168]⮂#[fg=white,bg=colour168] S:#S I:#I P:#P D:#D #[default]'
set -g status-left '#[fg=colour232,bg=colour214]#{?client_prefix,#[bg=colour226],} #h #[fg=colour232]⮁ #[fg=colour232]#(whoami) #[fg=colour214,bg=colour87]#{?client_prefix,#[fg=colour226]#[bg=colour87],}⮀#[fg=colour232,bg=colour87] #(git_branch) #[fg=colour87,bg=default]⮀#[default]'


# messaging
set -g message-fg white
set -g message-bg black
set -g message-command-fg blue
set -g message-command-bg black
set -g message-attr bright

#window mode
#setw -g clock-mode-colour colour135
#setw -g mode-bg colour6
#setw -g mode-bg colour238
#setw -g mode-bg colour235
#setw -g mode-fg colour0
#setw -g mode-attr bold

# 現在のウィンドウの色
# window status

# panes
#set -g pane-border-fg colour244
#set -g pane-border-bg colour233
set -g pane-active-border-fg colour51
set -g pane-active-border-bg colour238

set -g status-utf8 on
#set -g window-status-fg colour232
#set -g window-status-bg colour239
#set-window-option -g window-status-bg green
#set -g window-status-attr bold
#set-window-option -g window-status-format ' #[fg=colour239,bg=colour236]⮀#[fg=colour242,bg=colour236] #I #W[#{pane_current_command}] #[fg=colour236,bg=colour239]⮀#[default]'
#set-window-option -g window-status-format '#[reverse]⮀#[fg=colour242,bg=colour239] #I #W[#{pane_current_command}] #[bg=colour239,fg=colour232,reverse]⮀#[default]'
#set-window-option -g window-status-format '#[fg=colour87,bg=colour232]#[reverse]⮀ #I #W[#{pane_current_command}] #[default]⮀#[default]'
set-window-option -g window-status-format '#[fg=colour239,bg=colour243]⮀#[fg=colour232,bg=colour243] #I #W[#{pane_current_command}] #[fg=colour243,bg=colour239]⮀#[default]'

#set-window-option -g window-status-current-fg black
#set-window-option -g window-status-current-bg white
#set -g window-status-current-attr bold
#set-window-option -g window-status-current-format '#[default,reverse,fg=colour232]⮀#[default,fg=colour87,bg=colour232] #I #W[#{pane_current_command}] #[bg=colour236,fg=colour232,reverse]⮀#[default]'
set-window-option -g window-status-current-format '#[fg=colour232,reverse]⮀#[default,fg=colour87,bg=colour232] #I #W[#{pane_current_command}] #[default]#[fg=colour232]⮀#[default]'


#+----------------------------------------------------------------------------------------+
#  ウィンドウオプション
#+----------------------------------------------------------------------------------------+
#ウィンドウを実行コマンド名で自動リネーム
set-window-option -g automatic-rename on
#スクロールモード、コピーモード、選択モードで vi のキーバインドを使う
set-window-option -g mode-keys vi
#ウィンドウで動作があるとステータスラインでハイライト
set-window-option -g monitor-activity on
# vでマーク開始
bind -t vi-copy v begin-selection
# Vで行の先頭からマーク開始
bind -t vi-copy V select-line
# C-vで矩形選択の切り替え
bind -t vi-copy C-v rectangle-toggle
# yでヤンク
bind -t vi-copy y copy-selection
# Yで1行ヤンク
bind -t vi-copy Y copy-line


# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

#+----------------------------------------------------------------------------------------+
#  その他
#+----------------------------------------------------------------------------------------+

#
# マウス関連
#set-option -gw mode-mouse on
#set-option -g mouse-utf8 on
## mouse-resize-pane on にするとteratermでのコピー&ペーストがCtrlボタンを押しながらやる必要があるのでOFF
#set-option -g mouse-resize-pane on
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on


unbind C-b
set-option -g prefix C-t
# prefix + r で設定ファイルを再読み込み
unbind r
bind r source-file ~/.tmux.conf

#デタッチ d
bind d detach

# タイトル変更 A
bind A command-prompt "rename-window %%"

# ウィンドウ選択画面
bind Space choose-window

# 新ウィンドウ作成
bind c new-window

# 分割していたペインそれぞれをWindowに
bind b break-pane

# ウィンドウ移動
bind-key -r P select-window -t :-
bind-key -r N select-window -t :+

# ペイン終了
bind x kill-pane
# ウィンドウ終了
bind X kill-window

# ペイン番号表示
bind i display-panes

# ペインの縦分割
bind s split-window -v
# ペインの横分割
bind v split-window -h

# ペインの移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 各種ペインのリサイズ
#bind H resize-pane -L 5
#bind L resize-pane -R 5
#bind J resize-pane -D 5
#bind K resize-pane -U 5

bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

#set-window-option -g window-status-current-fg   white
#set-window-option -g window-status-current-bg   blue

# rbenv localを使えるようにする
set-environment -gu RBENV_VERSION


